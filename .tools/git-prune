#!/usr/bin/env python
import subprocess
# require pacin dialog


def run(cmd):
    # print(cmd)
    return subprocess.check_output(cmd.split()).decode()

run("git fetch --prune")
merged = run("git branch --merged origin/develop")
remotes = run("git branch -r --merged origin/develop")
# subprocess.Popen("gitg")

lists = merged.split() + remotes.split()
blacklist = [
    "master", "develop", "HEAD", "->", "*"
]
lists = [
    l for l in lists if not any(l.endswith(b) for b in blacklist)
]

if len(lists):
    s = ""
    for i, l in enumerate(lists):
        s += ' {}â€‰{} on'.format(l, '\u200B')

    select = subprocess.run(
        ("dialog --checklist Delete 35 70 20" + s).split(),
        stderr=subprocess.PIPE
    ).stderr.decode()

    select = select.replace('"', '').replace('\\#', '#').split()

    for s in select:
        if s.startswith("origin/"):
            run("git push origin :" + s[7:])
        else:
            run("git branch -d " + s)
else:
    print("Repo is pruned.")
    # Dialog.set_background_title() requires pythondialog 2.13 or later
    # git branch -d </tmp/branches'
    # git push origin :blah
